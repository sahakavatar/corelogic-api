<?php
/**
 * TaxLienTransaction
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SDP Property
 *
 * SDP Property API.
 *
 * OpenAPI spec version: v2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.66
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * TaxLienTransaction Class Doc Comment
 *
 * @category Class
 * @description taxLienTransaction
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TaxLienTransaction implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'TaxLienTransaction';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'tax_lien_recording_date' => 'string',
        'tax_lien_recorded_document_number' => 'string',
        'tax_lien_recorded_document_book_number' => 'string',
        'tax_lien_recorded_document_page_number' => 'string',
        'tax_lien_deed_category_type_code' => 'string',
        'tax_lien_document_type_code' => 'string',
        'tax_lien_document_type_code_description' => 'string',
        'tax_lien_creditor_company_name' => 'string',
        'tax_lien_estimated_amount' => 'float'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'tax_lien_recording_date' => null,
        'tax_lien_recorded_document_number' => null,
        'tax_lien_recorded_document_book_number' => null,
        'tax_lien_recorded_document_page_number' => null,
        'tax_lien_deed_category_type_code' => null,
        'tax_lien_document_type_code' => null,
        'tax_lien_document_type_code_description' => null,
        'tax_lien_creditor_company_name' => null,
        'tax_lien_estimated_amount' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'tax_lien_recording_date' => 'taxLienRecordingDate',
        'tax_lien_recorded_document_number' => 'taxLienRecordedDocumentNumber',
        'tax_lien_recorded_document_book_number' => 'taxLienRecordedDocumentBookNumber',
        'tax_lien_recorded_document_page_number' => 'taxLienRecordedDocumentPageNumber',
        'tax_lien_deed_category_type_code' => 'taxLienDeedCategoryTypeCode',
        'tax_lien_document_type_code' => 'taxLienDocumentTypeCode',
        'tax_lien_document_type_code_description' => 'taxLienDocumentTypeCodeDescription',
        'tax_lien_creditor_company_name' => 'taxLienCreditorCompanyName',
        'tax_lien_estimated_amount' => 'taxLienEstimatedAmount'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'tax_lien_recording_date' => 'setTaxLienRecordingDate',
        'tax_lien_recorded_document_number' => 'setTaxLienRecordedDocumentNumber',
        'tax_lien_recorded_document_book_number' => 'setTaxLienRecordedDocumentBookNumber',
        'tax_lien_recorded_document_page_number' => 'setTaxLienRecordedDocumentPageNumber',
        'tax_lien_deed_category_type_code' => 'setTaxLienDeedCategoryTypeCode',
        'tax_lien_document_type_code' => 'setTaxLienDocumentTypeCode',
        'tax_lien_document_type_code_description' => 'setTaxLienDocumentTypeCodeDescription',
        'tax_lien_creditor_company_name' => 'setTaxLienCreditorCompanyName',
        'tax_lien_estimated_amount' => 'setTaxLienEstimatedAmount'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'tax_lien_recording_date' => 'getTaxLienRecordingDate',
        'tax_lien_recorded_document_number' => 'getTaxLienRecordedDocumentNumber',
        'tax_lien_recorded_document_book_number' => 'getTaxLienRecordedDocumentBookNumber',
        'tax_lien_recorded_document_page_number' => 'getTaxLienRecordedDocumentPageNumber',
        'tax_lien_deed_category_type_code' => 'getTaxLienDeedCategoryTypeCode',
        'tax_lien_document_type_code' => 'getTaxLienDocumentTypeCode',
        'tax_lien_document_type_code_description' => 'getTaxLienDocumentTypeCodeDescription',
        'tax_lien_creditor_company_name' => 'getTaxLienCreditorCompanyName',
        'tax_lien_estimated_amount' => 'getTaxLienEstimatedAmount'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['tax_lien_recording_date'] = isset($data['tax_lien_recording_date']) ? $data['tax_lien_recording_date'] : null;
        $this->container['tax_lien_recorded_document_number'] = isset($data['tax_lien_recorded_document_number']) ? $data['tax_lien_recorded_document_number'] : null;
        $this->container['tax_lien_recorded_document_book_number'] = isset($data['tax_lien_recorded_document_book_number']) ? $data['tax_lien_recorded_document_book_number'] : null;
        $this->container['tax_lien_recorded_document_page_number'] = isset($data['tax_lien_recorded_document_page_number']) ? $data['tax_lien_recorded_document_page_number'] : null;
        $this->container['tax_lien_deed_category_type_code'] = isset($data['tax_lien_deed_category_type_code']) ? $data['tax_lien_deed_category_type_code'] : null;
        $this->container['tax_lien_document_type_code'] = isset($data['tax_lien_document_type_code']) ? $data['tax_lien_document_type_code'] : null;
        $this->container['tax_lien_document_type_code_description'] = isset($data['tax_lien_document_type_code_description']) ? $data['tax_lien_document_type_code_description'] : null;
        $this->container['tax_lien_creditor_company_name'] = isset($data['tax_lien_creditor_company_name']) ? $data['tax_lien_creditor_company_name'] : null;
        $this->container['tax_lien_estimated_amount'] = isset($data['tax_lien_estimated_amount']) ? $data['tax_lien_estimated_amount'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets tax_lien_recording_date
     *
     * @return string
     */
    public function getTaxLienRecordingDate()
    {
        return $this->container['tax_lien_recording_date'];
    }

    /**
     * Sets tax_lien_recording_date
     *
     * @param string $tax_lien_recording_date The date the tax lien transaction was recorded at the county recorder or Register of Deeds office.  Format: YYYYMMDD
     *
     * @return $this
     */
    public function setTaxLienRecordingDate($tax_lien_recording_date)
    {
        $this->container['tax_lien_recording_date'] = $tax_lien_recording_date;

        return $this;
    }

    /**
     * Gets tax_lien_recorded_document_number
     *
     * @return string
     */
    public function getTaxLienRecordedDocumentNumber()
    {
        return $this->container['tax_lien_recorded_document_number'];
    }

    /**
     * Sets tax_lien_recorded_document_number
     *
     * @param string $tax_lien_recorded_document_number The tax lien's unique document number assigned by the county recorder or Register of Deeds office.
     *
     * @return $this
     */
    public function setTaxLienRecordedDocumentNumber($tax_lien_recorded_document_number)
    {
        $this->container['tax_lien_recorded_document_number'] = $tax_lien_recorded_document_number;

        return $this;
    }

    /**
     * Gets tax_lien_recorded_document_book_number
     *
     * @return string
     */
    public function getTaxLienRecordedDocumentBookNumber()
    {
        return $this->container['tax_lien_recorded_document_book_number'];
    }

    /**
     * Sets tax_lien_recorded_document_book_number
     *
     * @param string $tax_lien_recorded_document_book_number The Book number used by some counties to record tax lien transactions.
     *
     * @return $this
     */
    public function setTaxLienRecordedDocumentBookNumber($tax_lien_recorded_document_book_number)
    {
        $this->container['tax_lien_recorded_document_book_number'] = $tax_lien_recorded_document_book_number;

        return $this;
    }

    /**
     * Gets tax_lien_recorded_document_page_number
     *
     * @return string
     */
    public function getTaxLienRecordedDocumentPageNumber()
    {
        return $this->container['tax_lien_recorded_document_page_number'];
    }

    /**
     * Sets tax_lien_recorded_document_page_number
     *
     * @param string $tax_lien_recorded_document_page_number The Page number used by some counties to record tax lien transactions.
     *
     * @return $this
     */
    public function setTaxLienRecordedDocumentPageNumber($tax_lien_recorded_document_page_number)
    {
        $this->container['tax_lien_recorded_document_page_number'] = $tax_lien_recorded_document_page_number;

        return $this;
    }

    /**
     * Gets tax_lien_deed_category_type_code
     *
     * @return string
     */
    public function getTaxLienDeedCategoryTypeCode()
    {
        return $this->container['tax_lien_deed_category_type_code'];
    }

    /**
     * Sets tax_lien_deed_category_type_code
     *
     * @param string $tax_lien_deed_category_type_code CoreLogic proprietary deed category type code that identifies the class of recorded tax lien legal document. Values: J = Liens R = Releases of liens
     *
     * @return $this
     */
    public function setTaxLienDeedCategoryTypeCode($tax_lien_deed_category_type_code)
    {
        $this->container['tax_lien_deed_category_type_code'] = $tax_lien_deed_category_type_code;

        return $this;
    }

    /**
     * Gets tax_lien_document_type_code
     *
     * @return string
     */
    public function getTaxLienDocumentTypeCode()
    {
        return $this->container['tax_lien_document_type_code'];
    }

    /**
     * Sets tax_lien_document_type_code
     *
     * @param string $tax_lien_document_type_code Type of tax lien document recorded.
     *
     * @return $this
     */
    public function setTaxLienDocumentTypeCode($tax_lien_document_type_code)
    {
        $this->container['tax_lien_document_type_code'] = $tax_lien_document_type_code;

        return $this;
    }

    /**
     * Gets tax_lien_document_type_code_description
     *
     * @return string
     */
    public function getTaxLienDocumentTypeCodeDescription()
    {
        return $this->container['tax_lien_document_type_code_description'];
    }

    /**
     * Sets tax_lien_document_type_code_description
     *
     * @param string $tax_lien_document_type_code_description Description of tax lien document recorded.
     *
     * @return $this
     */
    public function setTaxLienDocumentTypeCodeDescription($tax_lien_document_type_code_description)
    {
        $this->container['tax_lien_document_type_code_description'] = $tax_lien_document_type_code_description;

        return $this;
    }

    /**
     * Gets tax_lien_creditor_company_name
     *
     * @return string
     */
    public function getTaxLienCreditorCompanyName()
    {
        return $this->container['tax_lien_creditor_company_name'];
    }

    /**
     * Sets tax_lien_creditor_company_name
     *
     * @param string $tax_lien_creditor_company_name Entity on the Tax Lien. The following preferences are used to prioritize the entity on the document: 1st = agency that requested recording 2nd = entity responsible for notice/lien 3rd = Other wording (in favor of, indebted to, to be paid to, etc.) Examples: County of Nevada Tax Collector Department of Child Support Services
     *
     * @return $this
     */
    public function setTaxLienCreditorCompanyName($tax_lien_creditor_company_name)
    {
        $this->container['tax_lien_creditor_company_name'] = $tax_lien_creditor_company_name;

        return $this;
    }

    /**
     * Gets tax_lien_estimated_amount
     *
     * @return float
     */
    public function getTaxLienEstimatedAmount()
    {
        return $this->container['tax_lien_estimated_amount'];
    }

    /**
     * Sets tax_lien_estimated_amount
     *
     * @param float $tax_lien_estimated_amount Dollar amount of the tax lien listed. Occasionally, the document does not include a tax lien amount. Examples: $4387.38 = 4387.38 $13,765.00 = 13765.00
     *
     * @return $this
     */
    public function setTaxLienEstimatedAmount($tax_lien_estimated_amount)
    {
        $this->container['tax_lien_estimated_amount'] = $tax_lien_estimated_amount;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
