<?php
/**
 * EnrichedLienRiskTransaction
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SDP Property
 *
 * SDP Property API.
 *
 * OpenAPI spec version: v2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.66
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * EnrichedLienRiskTransaction Class Doc Comment
 *
 * @category Class
 * @description List of Enriched Liens.
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class EnrichedLienRiskTransaction implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'EnrichedLienRiskTransaction';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'mortgage_transaction_details_' => '\Swagger\Client\Model\EnrichedLienMortgageRiskTransaction',
        'recorded_document_details' => '\Swagger\Client\Model\EnrichedLienRecordedDocument',
        'loan_modification_details' => '\Swagger\Client\Model\EnrichedLienLoanModification',
        'loan_indicator_details' => '\Swagger\Client\Model\EnrichedLienLoanIndicator',
        'arm_details' => '\Swagger\Client\Model\EnrichedLienArm',
        'origination_lender_details' => '\Swagger\Client\Model\EnrichedLienLender',
        'current_lender_details' => '\Swagger\Client\Model\EnrichedLienCurrentLender'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'mortgage_transaction_details_' => null,
        'recorded_document_details' => null,
        'loan_modification_details' => null,
        'loan_indicator_details' => null,
        'arm_details' => null,
        'origination_lender_details' => null,
        'current_lender_details' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'mortgage_transaction_details_' => 'mortgageTransactionDetails ',
        'recorded_document_details' => 'recordedDocumentDetails',
        'loan_modification_details' => 'loanModificationDetails',
        'loan_indicator_details' => 'loanIndicatorDetails',
        'arm_details' => 'armDetails',
        'origination_lender_details' => 'originationLenderDetails',
        'current_lender_details' => 'currentLenderDetails'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'mortgage_transaction_details_' => 'setMortgageTransactionDetails_',
        'recorded_document_details' => 'setRecordedDocumentDetails',
        'loan_modification_details' => 'setLoanModificationDetails',
        'loan_indicator_details' => 'setLoanIndicatorDetails',
        'arm_details' => 'setArmDetails',
        'origination_lender_details' => 'setOriginationLenderDetails',
        'current_lender_details' => 'setCurrentLenderDetails'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'mortgage_transaction_details_' => 'getMortgageTransactionDetails_',
        'recorded_document_details' => 'getRecordedDocumentDetails',
        'loan_modification_details' => 'getLoanModificationDetails',
        'loan_indicator_details' => 'getLoanIndicatorDetails',
        'arm_details' => 'getArmDetails',
        'origination_lender_details' => 'getOriginationLenderDetails',
        'current_lender_details' => 'getCurrentLenderDetails'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['mortgage_transaction_details_'] = isset($data['mortgage_transaction_details_']) ? $data['mortgage_transaction_details_'] : null;
        $this->container['recorded_document_details'] = isset($data['recorded_document_details']) ? $data['recorded_document_details'] : null;
        $this->container['loan_modification_details'] = isset($data['loan_modification_details']) ? $data['loan_modification_details'] : null;
        $this->container['loan_indicator_details'] = isset($data['loan_indicator_details']) ? $data['loan_indicator_details'] : null;
        $this->container['arm_details'] = isset($data['arm_details']) ? $data['arm_details'] : null;
        $this->container['origination_lender_details'] = isset($data['origination_lender_details']) ? $data['origination_lender_details'] : null;
        $this->container['current_lender_details'] = isset($data['current_lender_details']) ? $data['current_lender_details'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets mortgage_transaction_details_
     *
     * @return \Swagger\Client\Model\EnrichedLienMortgageRiskTransaction
     */
    public function getMortgageTransactionDetails_()
    {
        return $this->container['mortgage_transaction_details_'];
    }

    /**
     * Sets mortgage_transaction_details_
     *
     * @param \Swagger\Client\Model\EnrichedLienMortgageRiskTransaction $mortgage_transaction_details_ mortgage_transaction_details_
     *
     * @return $this
     */
    public function setMortgageTransactionDetails_($mortgage_transaction_details_)
    {
        $this->container['mortgage_transaction_details_'] = $mortgage_transaction_details_;

        return $this;
    }

    /**
     * Gets recorded_document_details
     *
     * @return \Swagger\Client\Model\EnrichedLienRecordedDocument
     */
    public function getRecordedDocumentDetails()
    {
        return $this->container['recorded_document_details'];
    }

    /**
     * Sets recorded_document_details
     *
     * @param \Swagger\Client\Model\EnrichedLienRecordedDocument $recorded_document_details recorded_document_details
     *
     * @return $this
     */
    public function setRecordedDocumentDetails($recorded_document_details)
    {
        $this->container['recorded_document_details'] = $recorded_document_details;

        return $this;
    }

    /**
     * Gets loan_modification_details
     *
     * @return \Swagger\Client\Model\EnrichedLienLoanModification
     */
    public function getLoanModificationDetails()
    {
        return $this->container['loan_modification_details'];
    }

    /**
     * Sets loan_modification_details
     *
     * @param \Swagger\Client\Model\EnrichedLienLoanModification $loan_modification_details loan_modification_details
     *
     * @return $this
     */
    public function setLoanModificationDetails($loan_modification_details)
    {
        $this->container['loan_modification_details'] = $loan_modification_details;

        return $this;
    }

    /**
     * Gets loan_indicator_details
     *
     * @return \Swagger\Client\Model\EnrichedLienLoanIndicator
     */
    public function getLoanIndicatorDetails()
    {
        return $this->container['loan_indicator_details'];
    }

    /**
     * Sets loan_indicator_details
     *
     * @param \Swagger\Client\Model\EnrichedLienLoanIndicator $loan_indicator_details loan_indicator_details
     *
     * @return $this
     */
    public function setLoanIndicatorDetails($loan_indicator_details)
    {
        $this->container['loan_indicator_details'] = $loan_indicator_details;

        return $this;
    }

    /**
     * Gets arm_details
     *
     * @return \Swagger\Client\Model\EnrichedLienArm
     */
    public function getArmDetails()
    {
        return $this->container['arm_details'];
    }

    /**
     * Sets arm_details
     *
     * @param \Swagger\Client\Model\EnrichedLienArm $arm_details arm_details
     *
     * @return $this
     */
    public function setArmDetails($arm_details)
    {
        $this->container['arm_details'] = $arm_details;

        return $this;
    }

    /**
     * Gets origination_lender_details
     *
     * @return \Swagger\Client\Model\EnrichedLienLender
     */
    public function getOriginationLenderDetails()
    {
        return $this->container['origination_lender_details'];
    }

    /**
     * Sets origination_lender_details
     *
     * @param \Swagger\Client\Model\EnrichedLienLender $origination_lender_details origination_lender_details
     *
     * @return $this
     */
    public function setOriginationLenderDetails($origination_lender_details)
    {
        $this->container['origination_lender_details'] = $origination_lender_details;

        return $this;
    }

    /**
     * Gets current_lender_details
     *
     * @return \Swagger\Client\Model\EnrichedLienCurrentLender
     */
    public function getCurrentLenderDetails()
    {
        return $this->container['current_lender_details'];
    }

    /**
     * Sets current_lender_details
     *
     * @param \Swagger\Client\Model\EnrichedLienCurrentLender $current_lender_details current_lender_details
     *
     * @return $this
     */
    public function setCurrentLenderDetails($current_lender_details)
    {
        $this->container['current_lender_details'] = $current_lender_details;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
